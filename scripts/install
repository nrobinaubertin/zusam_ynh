#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers
source ynh_add_extra_apt_repos__3
source ynh_install_php__3
source ynh_composer__2

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
    ### Remove this function if there's nothing to clean before calling the remove script.
    true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
#path_url=$YNH_APP_ARG_PATH
path_url="/"
is_public=1 # true
language=$YNH_APP_ARG_LANGUAGE
password=$YNH_APP_ARG_PASSWORD
app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=language --value=$language

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing general dependencies..." --time --weight=1
ynh_install_app_dependencies $pkg_dependencies

ynh_script_progression --message="Installing php and php extensions..." --time --weight=1
ynh_install_php --phpversion="$php_version" --package="$php_extensions"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --time --weight=1
ynh_app_setting_set --app=$app --key=final_path --value=$final_path
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --time --weight=1
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --time --weight=1
ynh_add_fpm_config

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression --message="Copying default config..." --time --weight=1

# Copy the general .env file as a starter config file
cp $final_path/api/.env $final_path/data/config

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Modifying config..." --time --weight=1

# switch the APP_ENV to prod
ynh_replace_string \
    --match_string="APP_ENV=\"dev\"" \
    --replace_string="APP_ENV=\"prod\"" \
    --target_file="$final_path/data/config"

# generate a random APP_SECRET
ynh_replace_string \
    --match_string="APP_SECRET=\"\[^\"\]*\"" \
    --replace_string="APP_SECRET=\"$(ynh_string_random)\"" \
    --target_file="$final_path/data/config"

# set the path to ffmpeg binary
ynh_replace_string \
    --match_string="FFMPEG_PATH=\"\[^\"\]*\"" \
    --replace_string="FFMPEG_PATH=\"$(command -v ffmpeg)\"" \
    --target_file="$final_path/data/config"

# set the domain
ynh_replace_string \
    --match_string="DOMAIN=\"\[^\"\]*\"" \
    --replace_string="DOMAIN=\"$domain\"" \
    --target_file="$final_path/data/config"

# set the language
ynh_replace_string \
    --match_string="LANG=\"\[^\"\]*\"" \
    --replace_string="LANG=\"$language\"" \
    --target_file="$final_path/data/config"

echo "MAILER_URL=smtp://localhost:25" >> "$final_path/data/config"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression --message="Deploying Zusam..." --time --weight=1

# copy webapp files
cp "$final_path"/app/dist/* "$final_path/public/"

# copy language file
cp "$final_path/public/$language.js" "$final_path/public/lang.js"

# installing api
ynh_composer_exec \
    --phpversion=7.3 \
    --composer="$final_path/api/bin/composer" \
    --workdir="$final_path/api/" \
    --commands="install"

# preparing databse
php7.3 $final_path/api/bin/console zusam:init "$user" "$group" "$password"

# ensure that the var directory is present
mkdir -p "$final_path/api/var"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_store_file_checksum --file="$final_path/data/config"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R root: $final_path
chown -R $app: $final_path/data
chown -R $app: $final_path/api/var

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

### `yunohost service add` is a CLI yunohost command to add a service in the admin panel.
### You'll find the service in the 'services' section of YunoHost admin panel.
### This CLI command would be useless if the app does not have any services (systemd or sysvinit)
### If you're not using these lines:
###     - You can remove these files in conf/.
###     - Remove the section "REMOVE SERVICE FROM ADMIN PANEL" in the remove script
###     - As well as the section "ADVERTISE SERVICE IN ADMIN PANEL" in the restore script

yunohost service add $app --log "/var/log/$app/$app.log"
# if using yunohost version 3.2 or more in the 'manifest.json', a description can be added
#yunohost service add $app --description "$app daemon for XXX" --log "/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
    # unprotected_uris allows SSO credentials to be passed anyway.
    ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1
ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --time --last
